exports.id=229,exports.ids=[229],exports.modules={49539:(e,r,t)=>{"use strict";t.r(r),t.d(r,{"003787c780d0b1412f89dc8cba2557dd4fc9d51b3a":()=>A,"005bcc5230eba17c29499c73f8a00c1c14e81367cb":()=>C,"00bd3eb085bda435b34db54060c68616ecf82cb70f":()=>j,"402d5dd725747646d4b712edecc6e87a341e986955":()=>H,"405b56f370b18d9b7b38d660c3d4646c2d32af5853":()=>O,"40a32e889f787033d34e43c010758396575bca3ded":()=>x,"40ba612a8c87c4365687ae1c17a603b4a40805b48e":()=>T,"40cc87c780b504b12be444c7b52b79777878f92789":()=>U,"40f8c2640ac63a127b5cb508fb0ade93b3bb60b796":()=>S,"6097c4e23b14f894a9cc59f79ec8b7e3b891e3645d":()=>R,"60c80fe8f9a89b6400737f21a1907e5c22ffa77827":()=>y,"70829144303c8852a74b4c1022abe67cc36d97f6d4":()=>$});var a=t(21590);t(70376);let n=new(t(42449)).Pool({connectionString:process.env.DATABASE_URL});var s=t(16500);let o=s.z.object({email:s.z.string().email({message:"Please enter a valid email."}).trim(),password:s.z.string().min(8,{message:"Password must be 8 chars minimum"}).trim()}),i=o.extend({name:s.z.string().min(1,"Name is required"),role:s.z.enum(["admin","volunteer","incharge"],{required_error:"Role is required",invalid_type_error:"Invalid role"})}),l=s.z.object({hr_name:s.z.string().min(1,"HR name is required"),volunteer:s.z.string().min(1,"Volunteer name is required"),incharge:s.z.string().min(1,"Incharge name is required"),company:s.z.string().min(1,"Company name is required"),phone_number:s.z.string().regex(/^\d{10}$/,"Phone number must be exactly 10 digits"),status:s.z.enum(["Pending","Active","Inactive","Email_Sent","Not_Called","Blacklisted","Not_Reachable","Wrong_Number","Called_Postponed","Emailed_Declined"],{required_error:"Status is required"}),email:s.z.string().email().optional().or(s.z.literal("")),interview_mode:s.z.enum(["Online","In-person","Both","Not Confirmed"],{required_error:"Interview mode is required",invalid_type_error:"Invalid interview mode"}).optional(),hr_count:s.z.number().int().min(1).default(1),transport:s.z.string().optional().or(s.z.literal("")),address:s.z.string().optional().or(s.z.literal("")),internship:s.z.enum(["Yes","No"]).default("No"),comments:s.z.string().optional().or(s.z.literal(""))});var c=t(99184);async function d(e){try{return(await n.query("SELECT * FROM users WHERE email = $1 LIMIT 1",[e])).rows[0]||null}catch(e){throw e}}var u=t(8805),m=t.n(u),h=t(41231),N=t(13194),E=t(42385);let g=process.env.SESSION_SECRET,b=new TextEncoder().encode(g);async function p(e){return new h.P(e).setProtectedHeader({alg:"HS256"}).setIssuedAt().setExpirationTime("7d").sign(b)}async function v(e){try{let{payload:r}=await (0,N.V)(e,b,{algorithms:["HS256"]});return r}catch(e){}}async function f({email:e,role:r,incharge_email:t,name:a,incharge_name:n}){let s=new Date(Date.now()+6048e5),o={email:e,role:r,expiresAt:s};t&&(o.incharge_email=t),a&&(o.name=a),n&&(o.incharge_name=n);let i=await p(o);(await (0,E.UL)()).set("session",i,{expires:s,sameSite:"lax",path:"/"})}async function _(){await (0,E.UL)().delete("session")}async function w(){let e=(await E.UL()).get("session")?.value;return e&&await v(e)||null}async function x(e){let r=o.safeParse({email:e.get("email"),password:e.get("password")});if(!r.success)return{errors:r.error.flatten().fieldErrors};let{email:t,password:a}=r.data,n=null,s=null,i=null;try{let e=await d(t);if(!e||!await m().compare(a,e.password))return{errors:"invaliduser"};if("volunteer"===e.role){let r=await d(e.incharge_email);i=r.name,r.email,await f({email:e.email,role:e.role,name:e.name,incharge_email:r.email,incharge_name:r.name})}else await f({email:e.email,role:e.role,name:e.name});n=e.role,s=e.name}catch(e){return{errors:"servererror"}}return{role:n,name:s,incharge:i}}async function C(){_(),(0,c.redirect)("/auth/login")}async function $(e=1,r=100,t={}){let a=await w();if(!a?.email)return{errors:"Unauthorized"};let s="SELECT * FROM hr_contacts",o=[],i=[];if("volunteer"===a.role)i.push("volunteer_email = $"+(o.length+1)),o.push(a.email);else if("incharge"===a.role)i.push("incharge_email = $"+(o.length+1)),o.push(a.email);else if("admin"!==a.role&&"global"!==a.role)return{errors:"Unauthorized"};t.name&&(i.push("hr_name ILIKE $"+(o.length+1)),o.push(`%${t.name}%`)),t.phoneNumber&&(i.push("phone_number ILIKE $"+(o.length+1)),o.push(`%${t.phoneNumber}%`)),t.search&&(i.push(`(
    hr_name ILIKE $${o.length+1} OR
    phone_number ILIKE $${o.length+1} OR
    email ILIKE $${o.length+1} OR
    company ILIKE $${o.length+1} OR
    volunteer ILIKE $${o.length+1} OR
    incharge ILIKE $${o.length+1} OR
    status ILIKE $${o.length+1} OR
    interview_mode ILIKE $${o.length+1} OR
    transport ILIKE $${o.length+1}
  )`),o.push(`%${t.search}%`)),t.interview&&(i.push("LOWER(interview_mode) = LOWER($"+(o.length+1)+")"),o.push(t.interview.toLowerCase())),t.status&&(i.push("status = $"+(o.length+1)),o.push(t.status)),i.length>0&&(s+=" WHERE "+i.join(" AND "));let l="SELECT COUNT(*) FROM hr_contacts"+(i.length>0?" WHERE "+i.join(" AND "):"");s+=` ORDER BY id LIMIT $${o.length+1} OFFSET $${o.length+2}`,o.push(r,(e-1)*r);try{let e=await n.query(s,o),r=await n.query(l,o.slice(0,-2)),t=parseInt(r.rows[0].count);return{data:e.rows,totalCount:t}}catch(e){throw e}}async function T(e){let r=await w();if(!r?.email)return{errors:"Unauthorized"};let t=l.safeParse({hr_name:e.hr_name,phone_number:e.phone_number,email:e.email,interview_mode:e.interview_mode,company:e.company,volunteer:e.volunteer,incharge:e.incharge,status:e.status,hr_count:e.hr_count?parseInt(e.hr_count):1,transport:e.transport,address:e.address,internship:e.internship||"No",comments:e.comments});if(!t.success)return{errors:t.error.flatten().fieldErrors};if("incharge"===r.role&&(!e.volunteer_email||!e.volunteer_email.includes("@")))return{errors:"A valid volunteer email is required"};if("admin"===r.role&&(!e.incharge_email||!e.volunteer_email||!e.incharge_email.includes("@")||!e.volunteer_email.includes("@")))return{errors:"Both incharge and volunteer emails are required and must be valid"};let a=t.data,s=`
    INSERT INTO hr_contacts (
      hr_name, phone_number, email, interview_mode, company,
      volunteer, incharge, status, hr_count, transport,
      address, internship, comments, incharge_email, volunteer_email
    ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15)
    RETURNING *
  `,o=[a.hr_name,a.phone_number,a.email,a.interview_mode,a.company,a.volunteer,a.incharge,a.status,a.hr_count,a.transport,a.address,a.internship,a.comments,"volunteer"===r.role?r.incharge_email:e.incharge_email,"volunteer"===r.role?r.email:e.volunteer_email];try{return(await n.query(s,o)).rows[0]}catch(e){if(console.error("Error adding HR record:",e),"23505"===e.code&&"unique_phone_number"===e.constraint)return{errors:"Phone number already exists in the database. Duplicate entries are not allowed."};return{errors:"Failed to add HR record"}}}async function y(e,r){let t=await w();if(!t?.email||"admin"!==t.role)return{errors:"Unauthorized"};let a=i.safeParse({email:r.email,password:r.password,role:r.role,name:r.name});if(!a.success)return{errors:a.error.flatten().fieldErrors};let s=r.inchargeEmail,{email:o,password:l,role:c,name:d}=a.data;if("volunteer"===c&&0===(await n.query("SELECT * FROM users WHERE email = $1 AND role = $2",[s,"incharge"])).rows.length)return{errors:"Specified incharge email does not exist or is not an incharge"};let u=`
    INSERT INTO users (email, password, role, incharge_email, name) 
    VALUES ($1, $2, $3, $4, $5)
  `;try{let e=await m().hash(l,10);return await n.query(u,[o,e,c,"volunteer"===c?s:null,d]),{success:!0}}catch(e){return console.error("Error adding user:",e),{errors:"Server Error"}}}async function H(e){let r=await w();if(!r?.email)return{errors:"Unauthorized"};let t=`
    SELECT * FROM hr_contacts WHERE id = $1
  `,a=`
    SELECT email FROM users WHERE role = 'incharge'
  `;try{let[s,o]=await Promise.all([n.query(t,[e]),n.query(a)]);if(0===s.rows.length)return{errors:"HR record not found"};let i=s.rows[0];if("volunteer"===r.role&&i.volunteer_email!==r.email)return{errors:"Unauthorized - You can only view your own records"};if("incharge"===r.role&&i.incharge_email!==r.email)return{errors:"Unauthorized - You can only view records assigned to you"};if("volunteer"===r.role){let{volunteer_email:e,incharge_email:r,...t}=i;return{data:t,incharges:[]}}return{data:i,incharges:o.rows.map(e=>e.email)}}catch(e){return console.error("Error fetching HR record:",e),{errors:"Server Error"}}}async function R(e,r){let t=await w();if(!t?.email)return{errors:"Unauthorized"};let a=l.safeParse({hr_name:r.hr_name,phone_number:r.phone_number,email:r.email,interview_mode:r.interview_mode,company:r.company,volunteer:r.volunteer,incharge:r.incharge,status:r.status,hr_count:r.hr_count?parseInt(r.hr_count):1,transport:r.transport,address:r.address,internship:r.internship||"No",comments:r.comments});if(!a.success)return{errors:a.error.flatten().fieldErrors};let s=a.data,o=`
    SELECT * FROM hr_contacts WHERE id = $1
  `;try{let a=await n.query(o,[e]);if(0===a.rows.length)return{errors:"HR record not found"};let i=a.rows[0];if("volunteer"===t.role&&i.volunteer_email!==t.email)return{errors:"Unauthorized - You can only edit your own records"};if("incharge"===t.role&&i.incharge_email!==t.email)return{errors:"Unauthorized - You can only edit records assigned to you"};let l=`
  UPDATE hr_contacts SET
    hr_name = $1,
    phone_number = $2,
    email = $3,
    interview_mode = $4,
    company = $5,
    volunteer = $6,
    incharge = $7,
    status = $8,
    hr_count = $9,
    transport = $10,
    address = $11,
    internship = $12,
    comments = $13,
    volunteer_email = $14,
    incharge_email = $15
  WHERE id = $16
  RETURNING *
`,c=[s.hr_name,s.phone_number,s.email,s.interview_mode,s.company,s.volunteer,s.incharge,s.status,s.hr_count,s.transport,s.address,s.internship,s.comments,"volunteer"===t.role?t.email:r.volunteer_email,"volunteer"===t.role?t.incharge_email:"incharge"===t.role?i.incharge_email:r.incharge_email,e],d=await n.query(l,c);if(0===d.rows.length)return{errors:"HR record not found"};return{data:d.rows[0]}}catch(e){if(console.error("Error updating HR record:",e),"23505"===e.code&&"unique_phone_number"===e.constraint)return{errors:"Phone number already exists in the database. Duplicate entries are not allowed."};return{errors:"Failed to update HR record"}}}async function O(e){let r=await w();if(!r?.email)return{errors:"Unauthorized"};let t=`
    SELECT * FROM hr_contacts WHERE id = $1
  `;try{let a=await n.query(t,[e]);if(0===a.rows.length)return{errors:"HR record not found"};let s=a.rows[0];if("volunteer"===r.role&&s.volunteer_email!==r.email)return{errors:"Unauthorized - You can only delete your own records"};if("incharge"===r.role&&s.incharge_email!==r.email)return{errors:"Unauthorized - You can only delete records assigned to you"};let o=`
      DELETE FROM hr_contacts WHERE id = $1
    `;return await n.query(o,[e]),{success:!0}}catch(e){return console.error("Error deleting HR record:",e),{errors:"Failed to delete HR record"}}}async function j(){let e=await w();if(!e?.email||"volunteer"!==e.role)return{errors:"Unauthorized"};let r=`
    SELECT 
      COUNT(CASE WHEN status = 'Email_Sent' THEN 1 END) as "Email Sent",
      COUNT(CASE WHEN status = 'Not_Called' THEN 1 END) as "Not Called",
      COUNT(CASE WHEN status = 'Active' THEN 1 END) as "Accepted Invite",
      COUNT(CASE WHEN status = 'Pending' THEN 1 END) as "Awaiting Response",
      COUNT(CASE WHEN status = 'Inactive' THEN 1 END) as "Called Declined",
      COUNT(CASE WHEN status = 'Emailed_Declined' THEN 1 END) as "Emailed Declined",
      COUNT(CASE WHEN status = 'Blacklisted' THEN 1 END) as "Blacklisted",
      COUNT(CASE WHEN status = 'Not_Reachable' THEN 1 END) as "Not Reachable",
      COUNT(CASE WHEN status = 'Wrong_Number' THEN 1 END) as "Wrong Number",
      COUNT(CASE WHEN status = 'Called_Postponed' THEN 1 END) as "Called Postponed",
      COUNT(*) as total_contacts
    FROM hr_contacts
    WHERE volunteer_email = $1
  `;try{return{data:(await n.query(r,[e.email])).rows[0]}}catch(e){return console.error("Error fetching member stats:",e),{errors:"Failed to fetch member statistics"}}}async function S(e){let r=await w();if(!r?.email||"incharge"!==r.role&&"admin"!==r.role)return{errors:"Unauthorized"};let t=`
    SELECT 
      u.name,
      COUNT(CASE WHEN h.status = 'Email_Sent' THEN 1 END) as "Email Sent",
      COUNT(CASE WHEN h.status = 'Not_Called' THEN 1 END) as "Not Called",
      COUNT(CASE WHEN h.status = 'Active' THEN 1 END) as "Accepted Invite",
      COUNT(CASE WHEN h.status = 'Pending' THEN 1 END) as "Awaiting Response",
      COUNT(CASE WHEN h.status = 'Inactive' THEN 1 END) as "Called Declined",
      COUNT(CASE WHEN h.status = 'Emailed_Declined' THEN 1 END) as "Emailed Declined",
      COUNT(CASE WHEN h.status = 'Blacklisted' THEN 1 END) as "Blacklisted",
      COUNT(CASE WHEN h.status = 'Not_Reachable' THEN 1 END) as "Not Reachable",
      COUNT(CASE WHEN h.status = 'Wrong_Number' THEN 1 END) as "Wrong Number",
      COUNT(CASE WHEN h.status = 'Called_Postponed' THEN 1 END) as "Called Postponed",
      COUNT(h.id) as contacts
    FROM users u
    LEFT JOIN hr_contacts h ON u.email = h.volunteer_email
    WHERE u.role = 'volunteer' 
    AND u.incharge_email = $1
    GROUP BY u.name
    ORDER BY u.name
  `;try{return{data:(await n.query(t,["incharge"===r.role?r.email:e])).rows}}catch(e){return console.error("Error fetching member stats:",e),{errors:"Failed to fetch member statistics"}}}async function A(){let e=await w();if(!e?.email||"admin"!==e.role)return{errors:"Unauthorized"};let r=`
    SELECT 
      u.name,
      COUNT(CASE WHEN h.status = 'Email_Sent' THEN 1 END) as "Email Sent",
      COUNT(CASE WHEN h.status = 'Not_Called' THEN 1 END) as "Not Called",
      COUNT(CASE WHEN h.status = 'Active' THEN 1 END) as "Accepted Invite",
      COUNT(CASE WHEN h.status = 'Pending' THEN 1 END) as "Awaiting Response",
      COUNT(CASE WHEN h.status = 'Inactive' THEN 1 END) as "Called Declined",
      COUNT(CASE WHEN h.status = 'Emailed_Declined' THEN 1 END) as "Emailed Declined",
      COUNT(CASE WHEN h.status = 'Blacklisted' THEN 1 END) as "Blacklisted",
      COUNT(CASE WHEN h.status = 'Not_Reachable' THEN 1 END) as "Not Reachable",
      COUNT(CASE WHEN h.status = 'Wrong_Number' THEN 1 END) as "Wrong Number",
      COUNT(CASE WHEN h.status = 'Called_Postponed' THEN 1 END) as "Called Postponed",
      COUNT(h.id) as contacts
    FROM users u
    LEFT JOIN hr_contacts h ON u.email = h.incharge_email
    WHERE u.role = 'incharge'
    GROUP BY u.name
    ORDER BY u.name
  `;try{return{data:(await n.query(r,[])).rows}}catch(e){return console.error("Error fetching incharge stats:",e),{errors:"Failed to fetch incharge statistics"}}}async function U(e){let r=await w();if(!r?.email)return{errors:"Unauthorized"};if(0===e.length)return{errors:"No records to upload"};try{let t=e.map((e,r)=>`($${15*r+1}, $${15*r+2}, $${15*r+3}, $${15*r+4}, $${15*r+5}, $${15*r+6}, $${15*r+7}, $${15*r+8}, $${15*r+9}, $${15*r+10}, $${15*r+11}, $${15*r+12}, $${15*r+13}, $${15*r+14}, $${15*r+15})`).join(", "),a=e.flatMap(e=>[e.hr_name,e.phone_number,e.email||"",e.interview_mode||"Not Confirmed",e.company,r.name,r.incharge_name?r.incharge_name:r.name,"Not_Called",1,e.transport||"",e.address||"","No",e.comments||"",r.incharge_email?r.incharge_email:r.email,r.email]),s=`
      WITH temp_data (
          hr_name, phone_number, email, interview_mode, company,
          volunteer, incharge, status, hr_count, transport,
          address, internship, comments, incharge_email, volunteer_email
      ) AS (
        VALUES ${t}
      ),
      inserted AS (
        INSERT INTO hr_contacts (
            hr_name, phone_number, email, interview_mode, company,
            volunteer, incharge, status, hr_count, transport,
            address, internship, comments, incharge_email, volunteer_email
        )
        SELECT
            hr_name, phone_number, email, interview_mode, company,
            volunteer, incharge, status, hr_count::INT, transport,
            address, internship, comments, incharge_email, volunteer_email
        FROM temp_data
        ON CONFLICT (phone_number) DO NOTHING
        RETURNING *
      )
      SELECT
        td.hr_name, td.phone_number, td.email, td.company
      FROM temp_data td
      LEFT JOIN inserted i ON td.phone_number = i.phone_number
      WHERE i.phone_number IS NULL;
    `,o=(await n.query(s,a)).rows,i=e.length-o.length;return{success:!0,successfulCount:i,duplicates:o.length>0?o:null,message:`Successfully added ${i} records${o.length>0?`. ${o.length} duplicates found.`:"."}`}}catch(e){return console.error("Error during bulk insert:",e),{success:!1,errors:"Error during bulk insert."}}}(0,t(99344).D)([x,C,$,T,y,H,R,O,j,S,A,U]),(0,a.A)(x,"40a32e889f787033d34e43c010758396575bca3ded",null),(0,a.A)(C,"005bcc5230eba17c29499c73f8a00c1c14e81367cb",null),(0,a.A)($,"70829144303c8852a74b4c1022abe67cc36d97f6d4",null),(0,a.A)(T,"40ba612a8c87c4365687ae1c17a603b4a40805b48e",null),(0,a.A)(y,"60c80fe8f9a89b6400737f21a1907e5c22ffa77827",null),(0,a.A)(H,"402d5dd725747646d4b712edecc6e87a341e986955",null),(0,a.A)(R,"6097c4e23b14f894a9cc59f79ec8b7e3b891e3645d",null),(0,a.A)(O,"405b56f370b18d9b7b38d660c3d4646c2d32af5853",null),(0,a.A)(j,"00bd3eb085bda435b34db54060c68616ecf82cb70f",null),(0,a.A)(S,"40f8c2640ac63a127b5cb508fb0ade93b3bb60b796",null),(0,a.A)(A,"003787c780d0b1412f89dc8cba2557dd4fc9d51b3a",null),(0,a.A)(U,"40cc87c780b504b12be444c7b52b79777878f92789",null)},4902:(e,r,t)=>{Promise.resolve().then(t.t.bind(t,59607,23))},39406:(e,r,t)=>{Promise.resolve().then(t.t.bind(t,28531,23))},27818:(e,r,t)=>{Promise.resolve().then(t.t.bind(t,13219,23)),Promise.resolve().then(t.t.bind(t,34863,23)),Promise.resolve().then(t.t.bind(t,25155,23)),Promise.resolve().then(t.t.bind(t,40802,23)),Promise.resolve().then(t.t.bind(t,9350,23)),Promise.resolve().then(t.t.bind(t,48530,23)),Promise.resolve().then(t.t.bind(t,88921,23))},90866:(e,r,t)=>{Promise.resolve().then(t.t.bind(t,66959,23)),Promise.resolve().then(t.t.bind(t,33875,23)),Promise.resolve().then(t.t.bind(t,88903,23)),Promise.resolve().then(t.t.bind(t,57174,23)),Promise.resolve().then(t.t.bind(t,84178,23)),Promise.resolve().then(t.t.bind(t,87190,23)),Promise.resolve().then(t.t.bind(t,61365,23))},76360:(e,r,t)=>{Promise.resolve().then(t.bind(t,34104)),Promise.resolve().then(t.bind(t,48713))},39912:(e,r,t)=>{Promise.resolve().then(t.bind(t,25612)),Promise.resolve().then(t.bind(t,6341))},25612:(e,r,t)=>{"use strict";t.d(r,{default:()=>s});var a=t(45512),n=t(11169);function s({children:e}){return(0,a.jsxs)(a.Fragment,{children:[e,(0,a.jsx)(n.i4,{height:"4px",color:"#1e40af",options:{showSpinner:!1},shallowRouting:!0})]})}},61038:(e,r,t)=>{"use strict";t.d(r,{$:()=>c,r:()=>l});var a=t(45512),n=t(58009),s=t(76660),o=t(32101),i=t(86645);let l=(0,o.F)("inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-neutral-950 disabled:pointer-events-none disabled:opacity-50 dark:focus-visible:ring-neutral-300",{variants:{variant:{default:"bg-neutral-900 text-neutral-50 shadow hover:bg-neutral-900/90 dark:bg-neutral-50 dark:text-neutral-900 dark:hover:bg-neutral-50/90",destructive:"bg-red-500 text-neutral-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-neutral-50 dark:hover:bg-red-900/90",outline:"border border-neutral-200 bg-white shadow-sm hover:bg-neutral-100 hover:text-neutral-900 dark:border-neutral-800 dark:bg-neutral-950 dark:hover:bg-neutral-800 dark:hover:text-neutral-50",secondary:"bg-neutral-100 text-neutral-900 shadow-sm hover:bg-neutral-100/80 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-800/80",ghost:"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-800 dark:hover:text-neutral-50",link:"text-neutral-900 underline-offset-4 hover:underline dark:text-neutral-50"},size:{default:"h-9 px-4 py-2",sm:"h-8 rounded-md px-3 text-xs",lg:"h-10 rounded-md px-8",icon:"h-9 w-9"}},defaultVariants:{variant:"default",size:"default"}}),c=n.forwardRef(({className:e,variant:r,size:t,asChild:n=!1,...o},c)=>{let d=n?s.DX:"button";return(0,a.jsx)(d,{className:(0,i.cn)(l({variant:r,size:t,className:e})),ref:c,...o})});c.displayName="Button"},69576:(e,r,t)=>{"use strict";t.d(r,{BT:()=>c,Wu:()=>d,ZB:()=>l,Zp:()=>o,aR:()=>i,wL:()=>u});var a=t(45512),n=t(58009),s=t(86645);let o=n.forwardRef(({className:e,...r},t)=>(0,a.jsx)("div",{ref:t,className:(0,s.cn)("rounded-xl border border-neutral-200 bg-white text-neutral-950 shadow dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50",e),...r}));o.displayName="Card";let i=n.forwardRef(({className:e,...r},t)=>(0,a.jsx)("div",{ref:t,className:(0,s.cn)("flex flex-col space-y-1.5 p-6",e),...r}));i.displayName="CardHeader";let l=n.forwardRef(({className:e,...r},t)=>(0,a.jsx)("h3",{ref:t,className:(0,s.cn)("font-semibold leading-none tracking-tight",e),...r}));l.displayName="CardTitle";let c=n.forwardRef(({className:e,...r},t)=>(0,a.jsx)("p",{ref:t,className:(0,s.cn)("text-sm text-neutral-500 dark:text-neutral-400",e),...r}));c.displayName="CardDescription";let d=n.forwardRef(({className:e,...r},t)=>(0,a.jsx)("div",{ref:t,className:(0,s.cn)("p-6 pt-0",e),...r}));d.displayName="CardContent";let u=n.forwardRef(({className:e,...r},t)=>(0,a.jsx)("div",{ref:t,className:(0,s.cn)("flex items-center p-6 pt-0",e),...r}));u.displayName="CardFooter"},6341:(e,r,t)=>{"use strict";t.d(r,{Toaster:()=>o});var a=t(45512),n=t(3371),s=t(91542);let o=({...e})=>{let{theme:r="system"}=(0,n.D)();return(0,a.jsx)(s.l$,{theme:r,className:"toaster group",toastOptions:{classNames:{toast:"group toast group-[.toaster]:bg-white group-[.toaster]:text-neutral-950 group-[.toaster]:border-neutral-200 group-[.toaster]:shadow-lg dark:group-[.toaster]:bg-neutral-950 dark:group-[.toaster]:text-neutral-50 dark:group-[.toaster]:border-neutral-800",description:"group-[.toast]:text-neutral-500 dark:group-[.toast]:text-neutral-400",actionButton:"group-[.toast]:bg-neutral-900 group-[.toast]:text-neutral-50 dark:group-[.toast]:bg-neutral-50 dark:group-[.toast]:text-neutral-900",cancelButton:"group-[.toast]:bg-neutral-100 group-[.toast]:text-neutral-500 dark:group-[.toast]:bg-neutral-800 dark:group-[.toast]:text-neutral-400"}},...e})}},86645:(e,r,t)=>{"use strict";t.d(r,{cn:()=>s});var a=t(82281),n=t(94805);function s(...e){return(0,n.QP)((0,a.$)(e))}},98180:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>i,metadata:()=>o});var a=t(62740);t(61135);var n=t(48713),s=t(34104);let o={title:"Forese HR Database",description:"Forese HR Database used for keeping track of HR contacts"};function i({children:e}){return(0,a.jsxs)("html",{lang:"en",children:[(0,a.jsx)("head",{children:(0,a.jsx)("link",{rel:"icon",href:"https://cdn.forese.co.in/icon.png",type:"image/png",sizes:"32x32"})}),(0,a.jsxs)("body",{className:"bg-blue-50",children:[(0,a.jsxs)(s.default,{children:[e,(0,a.jsx)(n.Toaster,{richColors:!0,theme:"light"})]}),(0,a.jsx)("script",{defer:!0,src:"https://static.cloudflareinsights.com/beacon.min.js","data-cf-beacon":'{"token": "716f5f629d1c4378bf436e405d6f28d7"}'})]})]})}},76868:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>o});var a=t(62740),n=t(59607),s=t.n(n);let o=function(){return(0,a.jsxs)("div",{className:"min-h-screen w-full flex flex-col items-center justify-center",children:[(0,a.jsx)("div",{className:"main_wrapper",children:(0,a.jsxs)("div",{className:"main",children:[(0,a.jsxs)("div",{className:"antenna",children:[(0,a.jsx)("div",{className:"antenna_shadow"}),(0,a.jsx)("div",{className:"a1"}),(0,a.jsx)("div",{className:"a1d"}),(0,a.jsx)("div",{className:"a2"}),(0,a.jsx)("div",{className:"a2d"}),(0,a.jsx)("div",{className:"a_base"})]}),(0,a.jsxs)("div",{className:"tv",children:[(0,a.jsx)("div",{className:"cruve",children:(0,a.jsx)("svg",{xmlSpace:"preserve",viewBox:"0 0 189.929 189.929",xlinkHref:"http://www.w3.org/1999/xlink",xmlns:"http://www.w3.org/2000/svg",version:"1.1",className:"curve_svg",children:(0,a.jsx)("path",{d:"M70.343,70.343c-30.554,30.553-44.806,72.7-39.102,115.635l-29.738,3.951C-5.442,137.659,11.917,86.34,49.129,49.13 C86.34,11.918,137.664-5.445,189.928,1.502l-3.95,29.738C143.041,25.54,100.895,39.789,70.343,70.343z"})})}),(0,a.jsx)("div",{className:"display_div",children:(0,a.jsx)("div",{className:"screen_out",children:(0,a.jsx)("div",{className:"screen_out1",children:(0,a.jsx)("div",{className:"screen",children:(0,a.jsx)("span",{className:"notfound_text",children:" NOT FOUND"})})})})}),(0,a.jsxs)("div",{className:"lines",children:[(0,a.jsx)("div",{className:"line1"}),(0,a.jsx)("div",{className:"line2"}),(0,a.jsx)("div",{className:"line3"})]}),(0,a.jsxs)("div",{className:"buttons_div",children:[(0,a.jsx)("div",{className:"b1",children:(0,a.jsx)("div",{})}),(0,a.jsx)("div",{className:"b2"}),(0,a.jsxs)("div",{className:"speakers",children:[(0,a.jsxs)("div",{className:"g1",children:[(0,a.jsx)("div",{className:"g11"}),(0,a.jsx)("div",{className:"g12"}),(0,a.jsx)("div",{className:"g13"})]}),(0,a.jsx)("div",{className:"g"}),(0,a.jsx)("div",{className:"g"})]})]})]}),(0,a.jsxs)("div",{className:"bottom",children:[(0,a.jsx)("div",{className:"base1"}),(0,a.jsx)("div",{className:"base2"}),(0,a.jsx)("div",{className:"base3"})]})]})}),(0,a.jsxs)("div",{className:"text_404",children:[(0,a.jsx)("div",{className:"text_4041",children:"4"}),(0,a.jsx)("div",{className:"text_4042",children:"0"}),(0,a.jsx)("div",{className:"text_4043",children:"4"})]}),(0,a.jsxs)("p",{className:"text-xl mt-8 text-gray-700 text-center",children:["Oops! Looks like this channel isn't broadcasting.",(0,a.jsx)("br",{}),(0,a.jsx)("span",{className:"text-sm",children:"Please adjust your antenna or try a different frequency."})]}),(0,a.jsx)(s(),{href:"/",className:"mt-6 px-6 py-3 bg-[#d36604] text-white rounded-lg hover:bg-[#e69635] transition-colors duration-200 shadow-lg hover:shadow-xl",children:"Return to Home Channel"})]})}},34104:(e,r,t)=>{"use strict";t.d(r,{default:()=>a});let a=(0,t(46760).registerClientReference)(function(){throw Error("Attempted to call the default export of \"/Users/jerry/projects/WebDev/forese/hrdb/src/components/ProgressBarProvider.jsx\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/Users/jerry/projects/WebDev/forese/hrdb/src/components/ProgressBarProvider.jsx","default")},48713:(e,r,t)=>{"use strict";t.d(r,{Toaster:()=>a});let a=(0,t(46760).registerClientReference)(function(){throw Error("Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"/Users/jerry/projects/WebDev/forese/hrdb/src/components/ui/sonner.jsx","Toaster")},61135:()=>{}};